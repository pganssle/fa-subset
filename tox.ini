[tox]
envlist =
    py312
    py311
    py310
isolated_build = true
skip_missing_interpreters = true
minversion = 3.3.0

[testenv]
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage/.coverage.{envname}
deps =
    click
    fonttools
    pytest
    pytest-cov
    pytest-xdist
    pytest-subtests
commands =
    pytest {posargs: -v --cov=fa_subset --cov=tests -n auto} {toxinidir}

[testenv:coverage-report]
setenv =
    COVERAGE_FILE = .coverage
skip_install = true
deps =
    coverage[toml]>=5.0.2
changedir = {toxworkdir}/.coverage
commands =
    coverage combine
    coverage report
    coverage xml
depends = py310,py311,py312

[testenv:typing]
description = Run typechecking
deps =
    click
    mypy>=0.991
    types-requests
commands =
    mypy {posargs} {toxinidir}/src

[testenv:format]
description = Run auto formatters
skip_install = true
deps =
    black
    isort>=5
commands =
    black .
    isort src tests

[testenv:lint]
description = Run linting checks
skip_install = true
deps =
    black
    isort>=5
    pylint
commands =
    black --check .
    isort --check-only scripts src tests
    pylint src tests

[testenv:build]
description = Build a wheel and source distribution
passenv =
    *
skip_install = true
deps =
    build
    virtualenv
commands =
    python -m build {posargs} {toxinidir} -o {toxinidir}/dist

[testenv:release]
description = Make a release; must be called after "build"
passenv =
    TWINE_*
skip_install = true
deps =
    twine
commands =
    twine check {toxinidir}/dist/*
    twine upload {toxinidir}/dist/* \
      {posargs:-r {env:TWINE_REPOSITORY:testpypi} --non-interactive}
depends =
    build
